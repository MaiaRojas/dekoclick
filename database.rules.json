{
  "rules": {
    "campuses": {
      ".read": true,
      ".write": "auth != null && auth.token.isAdmin == true",
      ".validate": true
    },
    "cohortCourses": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.token.isAdmin == true || root.child('users/' + auth.uid + '/roles/admin').exists())",
      ".validate": true
    },
    "cohortProgress": {
      ".read": "auth != null",
      ".write": "auth != null",
      ".validate": true
    },
    "cohortUsers": {
      ".read": "auth != null",
      ".write": "auth != null && auth.token.isAdmin == true",
      ".validate": true
    },
    "cohorts": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.token.isAdmin == true || root.child('users/' + auth.uid + '/roles/admin').exists())",
      ".validate": true
    },
    "courses": {
      ".read": true,
      ".write": "auth != null && auth.token.isAdmin == true",
      ".validate": true
    },
    "coursesIndex": {
      ".read": true,
      ".write": "auth != null && auth.token.isAdmin == true",
      ".validate": true
    },
    "userCohorts": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.token.isAdmin == true || root.child('users/' + auth.uid + '/roles/admin').exists())",
      ".validate": true
    },
    "users": {
      "$uid": {
        ".read": "auth != null",
        ".write": "auth != null && ((auth.uid == $uid && !newData.hasChildren(['roles'])) || (auth.token.isAdmin == true || root.child('users/' + auth.uid + '/roles/admin').exists()))",
        ".validate": true,
        "roles": {
          ".read": "auth != null",
          ".write": "auth != null && (auth.token.isAdmin == true || root.child('users/' + auth.uid + '/roles/admin').exists())",
          ".validate": true,
        }
      }
    }
  }
}
